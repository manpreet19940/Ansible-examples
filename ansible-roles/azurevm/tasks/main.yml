---
- name: Include task to validate prerequisites.
  include_role:
    name: ansible-roles/common
    tasks_from: validate-azure-prereqs

- name: Create RG
  azure_rm_resourcegroup:
    name: "{{rg_name}}"
    location: "{{location}}"
    state: present

- name: Ensure existing VNET.
  azure_rm_virtualnetwork_facts:
    resource_group: "{{vm_vnet_rg_name}}"
    name: "{{vm_vnet_name}}"
  
- name: Create Public IP for the VM.
  azure_rm_publicipaddress:
    resource_group: "{{rg_name}}"
    name: "{{vm_pubip_name}}"
    allocation_method: '{{vm_ip_allocation}}'
  when: create_vms_with_public_ip

- name: Get your machine's IP for NSG Rules.
  uri:
    url: http://ipinfo.io/ip
    return_content: yes
  register: ip_output

- set_fact: ansible_machine_ip={{ip_output.content | replace('\n','')}}

- debug:
    msg: "Your IP: {{ansible_machine_ip}}"

- name: Create NSG.
  azure_rm_securitygroup:
    resource_group: '{{rg_name}}'
    name: '{{vm_nsg_name}}'
    purge_rules: yes
    rules: '{{vm_nsg_rules}}'

- name: Create NIC with Public IP and reference the VNET ID retrieved earlier.
  azure_rm_networkinterface:
    resource_group: "{{rg_name}}"
    name: "{{vm_nic_name}}"
    virtual_network: 
      name: '{{vm_vnet_name}}'
      resource_group: '{{vm_vnet_rg_name}}'
    subnet: "{{vm_subnet_name}}"
    ip_configurations:
    - name: '{{vm_pubip_name}}'
      public_ip_address_name: "{{vm_pubip_name}}"
    security_group_name: '{{vm_nsg_name}}'
  when: create_vms_with_public_ip

- name: Create NIC WITHOUT Public IP and reference the VNET ID retrieved earlier.
  azure_rm_networkinterface:
    resource_group: "{{rg_name}}"
    name: "{{vm_nic_name}}"
    virtual_network: 
      name: '{{vm_vnet_name}}'
      resource_group: '{{vm_vnet_rg_name}}'
    subnet: "{{vm_subnet_name}}"
    ip_configurations:
    - name: '{{vm_name}}-privip'
      private_ip_allocation_method: Dynamic
    security_group_name: '{{vm_nsg_name}}'
  when: not create_vms_with_public_ip

- name: Create VM of type Windows
  azure_rm_virtualmachine:
    resource_group: "{{rg_name}}"
    name: "{{vm_name}}"
    vm_size: "{{vm_size}}"
    admin_username: "{{vm_username}}"
    admin_password: "{{vault_vm_password}}"
    os_type: "{{vm_os_type}}"
    network_interfaces: "{{vm_nic_name}}"
    subnet_name: "{{vm_subnet_name}}"
    virtual_network_resource_group: "{{vm_vnet_rg_name}}"
    virtual_network_name: "{{vm_vnet_name}}"
    image: "{{vm_image}}"
    tags: "{{vm_tags}}"
    managed_disk_type: Standard_LRS
  when: "vm_os_type != 'Linux'"

- name: Create VM of type Linux
  azure_rm_virtualmachine:
    resource_group: "{{rg_name}}"
    name: "{{vm_name}}"
    vm_size: "{{vm_size}}"
    admin_username: "{{vm_username}}"
    admin_password: "{{vault_vm_password}}"
    os_type: "{{vm_os_type}}"
    network_interfaces: "{{vm_nic_name}}"
    subnet_name: "{{vm_subnet_name}}"
    virtual_network_resource_group: "{{vm_vnet_rg_name}}"
    virtual_network_name: "{{vm_vnet_name}}"
    image: "{{vm_image}}"
    tags: "{{vm_tags}}"
    managed_disk_type: Standard_LRS
    ssh_public_keys:
    - path: /home/{{vm_username}}/.ssh/authorized_keys
      key_data: "{{ lookup('file', ssh_pubkey_path) }}"
  when: "vm_os_type == 'Linux'"
  
# Set a fact that contains the UTF 16 Base64 Encoded form of following command:
# Invoke-Expression -Command "(New-Object System.Net.WebClient).DownloadFile(`"https://raw.githubusercontent.com/ansible/ansible/devel/examples/scripts/ConfigureRemotingForAnsible.ps1`",`"C:\remoting.ps1`")"; C\:\remoting.ps1 -Verbose -ForceNewSSLCert
# this command needs to be encoded through Powershell for it to work with the Azure VM Extension.

- set_fact: 
    configure_remoting_for_ansible: SQBuAHYAbwBrAGUALQBFAHgAcAByAGUAcwBzAGkAbwBuACAALQBDAG8AbQBtAGEAbgBkACAAIgAoAE4AZQB3AC0ATwBiAGoAZQBjAHQAIABTAHkAcwB0AGUAbQAuAE4AZQB0AC4AVwBlAGIAQwBsAGkAZQBuAHQAKQAuAEQAbwB3AG4AbABvAGEAZABGAGkAbABlACgAYAAiAGgAdAB0AHAAcwA6AC8ALwByAGEAdwAuAGcAaQB0AGgAdQBiAHUAcwBlAHIAYwBvAG4AdABlAG4AdAAuAGMAbwBtAC8AYQBuAHMAaQBiAGwAZQAvAGEAbgBzAGkAYgBsAGUALwBkAGUAdgBlAGwALwBlAHgAYQBtAHAAbABlAHMALwBzAGMAcgBpAHAAdABzAC8AQwBvAG4AZgBpAGcAdQByAGUAUgBlAG0AbwB0AGkAbgBnAEYAbwByAEEAbgBzAGkAYgBsAGUALgBwAHMAMQBgACIALABgACIAQwA6AFwAcgBlAG0AbwB0AGkAbgBnAC4AcABzADEAYAAiACkAIgA7ACAAQwA6AFwAcgBlAG0AbwB0AGkAbgBnAC4AcABzADEAIAAtAFYAZQByAGIAbwBzAGUAIAAtAEYAbwByAGMAZQBOAGUAdwBTAFMATABDAGUAcgB0AA==

- name: For Windows VMs, set a VM Extension that enables Powershell Remoting
  azure_rm_virtualmachine_extension:
    name: ConfigurePSRemotingForAnsible
    resource_group: "{{rg_name}}"
    virtual_machine_name: "{{vm_name}}"
    publisher: Microsoft.Compute
    virtual_machine_extension_type: CustomScriptExtension
    type_handler_version: 1.9
    settings: '{"commandToExecute": "powershell.exe -ExecutionPolicy ByPass -EncodedCommand {{configure_remoting_for_ansible}}"}'
    auto_upgrade_minor_version: true
  when: "vm_os_type == 'Windows'"
